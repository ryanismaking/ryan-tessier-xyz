import type { GetStaticPaths, GetStaticProps, NextPage } from "next";
import Head from "next/head";
import { useRouter } from "next/router";
import path from "path";
import Author from "../../components/Author";
import EmailCapture from "../../components/EmailCapture";
import Footer from "../../components/Footer";
import Headline from "../../components/Headline";
import Title from "../../components/Title";
import styles from "../../styles/Article.module.css";
import fs from "fs";
import { ParsedUrlQuery } from "querystring";
import { MDXRemote, MDXRemoteSerializeResult } from "next-mdx-remote";
import { serialize } from "next-mdx-remote/serialize";
import matter from "gray-matter";

type Article = {
  slug: string;
  title: string;
  content: MDXRemoteSerializeResult;
};

type ArticlePageProps = {
  article: Article;
};

interface ArticleParsedUrlQuery extends ParsedUrlQuery {
  slug: string;
}

export const getStaticPaths: GetStaticPaths = async () => {
  const articlesDirectory = path.join(process.cwd(), "articles");
  const fileNames = fs.readdirSync(articlesDirectory);

  const paths = fileNames.map((fileName) => ({
    params: {
      slug: fileName.replace(/.mdx$/, ""),
    },
  }));

  return {
    paths,
    fallback: false,
  };
};

export const getStaticProps: GetStaticProps<
  ArticlePageProps,
  ArticleParsedUrlQuery
> = async ({ params }) => {
  const articlesDirectory = path.join(process.cwd(), "articles");
  const slug = params!.slug;

  const fileBuffer = fs.readFileSync(
    path.join(articlesDirectory, `${slug}.mdx`)
  );

  const { content: fileContents, data: fileMetadata } = matter(fileBuffer);

  const markdownSource = await serialize(fileContents);

  return {
    props: {
      article: {
        slug,
        title: fileMetadata.title,
        content: markdownSource,
      },
    },
  };
};

const ArticlePage: NextPage<ArticlePageProps> = ({ article }) => {
  const router = useRouter();
  const { slug } = router.query;

  return (
    <div>
      <Head>
        <title>{`${article.title} â€” Product Design with Ryan`}</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <Title />
        <Headline>{article.title}</Headline>
        <Author />
        <MDXRemote {...article.content} />
      </main>

      <EmailCapture />

      <Footer />
    </div>
  );
};

export default ArticlePage;
